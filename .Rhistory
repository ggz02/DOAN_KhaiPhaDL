write.xlsx(trans_data, "transactions.xlsx")
# Trích xuất thông tin từ đối tượng transactions
trans_data <- as.data.frame(inspect(transactions))
# Lưu dataframe thành file Excel
write.xlsx(trans_data, "transactions.xlsx")
str(transactions)
library(arules)
# Trích xuất ma trận transaction từ đối tượng transactions
trans_matrix <- as(as(transactions, "ngCMatrix"), "matrix")
# Tạo dataframe từ ma trận transaction và gán tên cột từ thông tin sản phẩm
trans_df <- as.data.frame(trans_matrix)
colnames(trans_df) <- transactions@itemInfo$labels
# Lưu dataframe thành file Excel
write.xlsx(trans_df, "transactions.xlsx")
# Chuyển danh sách giao dịch thành đối tượng transactions
transactions <- as(dataset, "transactions")
dataf <- as(transactions, "data.frame")
convert_to_dataframe <- function(dataf) {
# Khởi tạo dataframe
dff <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(dff) <- c("Ma hoa don", "Ma khach hang", "Ten san pham")
# Khởi tạo biến lưu trữ mã hóa đơn và mã khách hàng
invoice_id <- 1
customer_id <- 1
# Duyệt qua mỗi dòng dữ liệu
for (line in dataf) {
# Loại bỏ dấu '{'
line <- gsub("\\{", "", line)
# Tách các sản phẩm thành vector
products <- unlist(strsplit(line, ","))
# Duyệt qua mỗi sản phẩm và thêm vào dataframe
for (product in products) {
dff[nrow(dff) + 1, ] <- c(invoice_id, paste0("KH", customer_id), product)
# Kiểm tra dấu '}'
if (grepl("\\}", product)) {
# Tăng mã hóa đơn và mã khách hàng
invoice_id <- invoice_id + 1
customer_id <- customer_id + 1
}
}
}
return(dff)
}
# Chuyển dữ liệu thành dataframe
dff <- convert_to_dataframe(dataf)
# Lưu dataframe vào file Excel
write.xlsx(dff, "output949.xlsx")
write.xlsx(dataset, "output951.xlsx")
# Lấy danh sách tất cả các sản phẩm từ các combo
all_items <- unique(unlist(c(combo1, combo2, combo3)))
# Tạo dataframe có số hàng bằng số lượng giao dịch và số cột bằng số lượng sản phẩm
df <- data.frame(matrix(0, nrow = num_transactions, ncol = length(all_items)))
colnames(df) <- all_items
for (i in 1:num_transactions) {
for (j in 1:length(dataset[[i]])) {
item <- dataset[[i]][j]
df[i, item] <- 1
}
}
# Lưu dataset dưới dạng one-hot
write.csv(df, "one_hot_dataset.csv", row.names = FALSE)
library(readxl)
Book2 <- read_excel("D:/OneDrive/OneDrive - UFM/Desktop/Book2.xlsx")
View(Book2)
rules1 <- apriori(data = Book2,
parameter = list(supp = 0.5, conf = 0.7))
library(readxl)
Book2 <- read_excel("D:/OneDrive/OneDrive - UFM/Desktop/Book2.xlsx")
View(Book2)
rules1 <- apriori(data = Book2,
parameter = list(supp = 0.5, conf = 0.7))
# In các luật kết hợp với điều kiện
sortrules <- sort(rules1, by = 'lift')[1:20]
inspect(sortrules)
library(readxl)
Book2 <- read_excel("D:/OneDrive/OneDrive - UFM/Desktop/Book2.xlsx")
View(Book2)
rules1 <- apriori(data = Book2,
parameter = list(supp = 0.5, conf = 0.7))
# In các luật kết hợp với điều kiện
sortrules <- sort(rules1, by = 'lift')[1:20]
inspect(sortrules)
rules <- apriori(Book2, parameter = list(support = 0.5, confidence = 0.75))
# In các luật kết hợp với điều kiện
sortrules <- sort(rules1, by = 'lift')[1:20]
inspect(sortrules)
rules <- apriori(dataset, parameter = list(support = 0.5, confidence = 0.75))
rules <- apriori(Book2, parameter = list(support = 0.5, confidence = 0.75))
rules <- apriori(Book2, parameter = list(support = 0.5, confidence = 0.75))
rules <- apriori(dataset, parameter = list(support = 0.5, confidence = 0.75))
# In ra các luật kết hợp
inspect(rules)
source("D:/UFM 1/Nam3/HK2/Data/CK/Source Code/CK/R/Fake.R")
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Excel")
View(CustomerData)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Excel")
View(CustomerData)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx")
View(CustomerData)
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx")
View(CustomerData)
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx")
View(CustomerData)
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
CustomerData <- CustomerData %>%
filter(Tuoi >= 18 & Tuoi <= 50)
# Load thư viện dplyr
library(dplyr)
CustomerData <- CustomerData %>%
filter(Tuoi >= 18 & Tuoi <= 50)
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(18, 34, 50),
labels = c("18-34", "35-50"))
CustomerData <- CustomerData %>%
select(1:5, `Pham vi Tuoi`, 6:(ncol(CustomerData) - 1), `KH trung thanh`)
##Lưu lại bộ dữ liệu sau tiền xử lý
library(openxlsx)
write.xlsx(grouped_data,"CustomerDatatienxulytrenR.xlsx")
write.xlsx(CustomerData,"CustomerDatatienxulytrenR.xlsx")
write.xlsx(CustomerData,"CustomerDatatienxulytrenR.xlsx")
library(rpart)
library(rpart.plot)
#Thuật toán cây ra quyết định
#Cài đặt và sử dụng các thư viện
install.packages("rpart")
tree <- rpart(`KHtrungthanh` ~ `Gioitinh` + `PhamviTuoi` + `Tongchi` +
`Solanmuahang` + `Phuongthucthanhtoan` +
`Danhgiadonhangdamua`,
data = CustomerData)
tree <- rpart(`KH trung thanh` ~ `Gioi tinh` + `Pham vi Tuoi` + `Tong chi` +
`So lan mua hang` + `Phuong thuc thanh toan` +
`Danh gia don hang da mua`,
data = CustomerData)
tree <- rpart(`KH trung thanh` ~ `Gioi tinh` + `Pham vi Tuoi` + `Tong chi` +
`So lan mua hang` + `Phuong thuc thanh toan` +
`Danh gia don hang`,
data = CustomerData)
# In cây ra quyết định
plot(tree)
text(tree)
prp(tree)
prp(tree, extra = 1, box.col = "lightgreen", branch.lty = 1)
#Thuật toán gom cụm
#Cài đặt và tải các thư viện
install.packages("factoextra")
# In cây ra quyết định
plot(tree)
text(tree)
prp(tree)
prp(tree, extra = 1, box.col = "lightgreen", branch.lty = 1)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Excel")
View(CustomerData)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
CustomerData <- CustomerData %>%
filter(Tuoi >= 18 & Tuoi <= 50)
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(18, 34, 50),
labels = c("18-34", "35-50"))
CustomerData <- CustomerData %>%
select(1:5, `Pham vi Tuoi`, 6:(ncol(CustomerData) - 1), `KH trung thanh`)
tree <- rpart(`KH trung thanh` ~ `Gioi tinh` + `Pham vi Tuoi` + `Tong chi` +
`So lan mua hang` + `Phuong thuc thanh toan` +
`Danh gia don hang`,
data = CustomerData)
# In cây ra quyết định
plot(tree)
text(tree)
prp(tree)
prp(tree, extra = 1, box.col = "lightgreen", branch.lty = 1)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Excel_RattleGUI")
View(CustomerData)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
tree <- rpart(`KH_trung_thanh` ~ `Gioi_tinh` + `Pham_vi_Tuoi` + `Tong_chi` +
`So_lan_mua_hang` + `Phuong_thuc_thanh_toan` +
`Danh_gia_don_hang`,
data = CustomerData)
# In cây ra quyết định
plot(tree)
text(tree)
prp(tree)
prp(tree, extra = 1, box.col = "lightgreen", branch.lty = 1)
library(readxl)
CustomerDataExcel <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Excel")
View(CustomerDataExcel)
library(readxl)
CustomerDataERG <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Excel_RattleGUI")
View(CustomerDataERG)
# Tạo hai data frame mẫu
df1 <- CustomerDataExcel
df2 <- CustomerDataERG
# Tìm các dòng khác nhau giữa df1 và df2
different_rows <- setdiff(df1, df2)
View(different_rows)
# Tạo hai data frame mẫu
df1 <- CustomerDataExcel
df2 <- CustomerDataERG
# Tìm các dòng khác nhau giữa df1 và df2
different_rows <- setdiff(df1, df2)
View(different_rows)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerDataExcel)
View(CustomerData)
tree <- rpart(`KH_trung_thanh` ~ `Gioi_tinh` + `Pham_vi_Tuoi` + `Tong_chi` +
`So_lan_mua_hang` + `Phuong_thuc_thanh_toan` +
`Danh_gia_don_hang`,
data = CustomerData)
# In cây ra quyết định
plot(tree)
text(tree)
prp(tree)
prp(tree, extra = 1, box.col = "lightgreen", branch.lty = 1)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx")
View(CustomerData)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
tree <- rpart(`KH trung thanh` ~ `Gioi tinh` + `Pham vi Tuoi` + `Tong chi` +
`So lan mua hang` + `Phuong thuc thanh toan` +
`Danh gia don hang`,
data = CustomerData)
# In cây ra quyết định
plot(tree)
text(tree)
prp(tree)
prp(tree, extra = 1, box.col = "lightgreen", branch.lty = 1)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Excel")
View(CustomerData)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
CustomerData <- CustomerData %>%
filter(Tuoi >= 18 & Tuoi <= 50)
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(18, 34, 50),
labels = c("18-34", "35-50"))
CustomerData <- CustomerData %>%
select(1:5, `Pham vi Tuoi`, 6:(ncol(CustomerData) - 1), `KH trung thanh`)
tree <- rpart(`KH trung thanh` ~ `Gioi tinh` + `Pham vi Tuoi` + `Tong chi` +
`So lan mua hang` + `Phuong thuc thanh toan` +
`Danh gia don hang`,
data = CustomerData)
# In cây ra quyết định
plot(tree)
text(tree)
prp(tree)
prp(tree, extra = 1, box.col = "lightgreen", branch.lty = 1)
library(readxl)
CustomerDataRG <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Rattle GUI")
View(CustomerDataRG)
# Tạo hai data frame mẫu
df1 <- CustomerData
df2 <- CustomerDataRG
# Tìm các dòng khác nhau giữa df1 và df2
different_rows <- setdiff(df1, df2)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Rattle GUI")
View(CustomerData)
library(readxl)
CustomerDataRG <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Rattle GUI")
View(CustomerDataRG)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Excel")
View(CustomerData)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
CustomerData <- CustomerData %>%
filter(Tuoi >= 18 & Tuoi <= 50)
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(18, 34, 50),
labels = c("18-34", "35-50"))
CustomerData <- CustomerData %>%
select(1:5, `Pham vi Tuoi`, 6:(ncol(CustomerData) - 1), `KH trung thanh`)
# Tạo hai data frame mẫu
df1 <- CustomerData
df2 <- CustomerDataRG
# Tìm các dòng khác nhau giữa df1 và df2
different_rows <- setdiff(df1, df2)
View(different_rows)
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(18, 34, 50),
labels = c("18-34", "35-50"))
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Excel", col_types = c("numeric",
"text", "text", "text", "numeric",
"text", "text", "text", "numeric",
"numeric", "text", "numeric", "text",
"numeric", "text"))
View(CustomerData)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
CustomerData <- CustomerData %>%
filter(Tuoi >= 18 & Tuoi <= 50)
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(18, 34, 50),
labels = c("18-34", "35-50"))
CustomerData <- CustomerData %>%
select(1:5, `Pham vi Tuoi`, 6:(ncol(CustomerData) - 1), `KH trung thanh`)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Excel")
View(CustomerData)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
CustomerData <- CustomerData %>%
filter(Tuoi >= 18 & Tuoi <= 50)
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(18, 34, 50),
labels = c("18-34", "35-50"))
CustomerData <- CustomerData %>%
select(1:5, `Pham vi Tuoi`, 6:(ncol(CustomerData) - 1), `KH trung thanh`)
#Tạo cột Phạm vi Tuổi để chia ra 2 nhóm tuổi chưa ổn định tài chính và đã ổn định tài chính
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(17, 34, 50),
labels = c("18-34", "35-50"))
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(17, 34, 50),
labels = c("18-34", "35-50"))
CustomerData <- CustomerData %>%
select(1:5, `Pham vi Tuoi`, 6:(ncol(CustomerData) - 1), `KH trung thanh`)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx")
View(CustomerData)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
CustomerData <- CustomerData %>%
filter(Tuoi >= 18 & Tuoi <= 50)
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(17, 34, 50),
labels = c("18-34", "35-50"))
CustomerData <- CustomerData %>%
select(1:5, `Pham vi Tuoi`, 6:(ncol(CustomerData) - 1), `KH trung thanh`)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx",
sheet = "Excel")
View(CustomerData)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
CustomerData <- CustomerData %>%
filter(Tuoi >= 18 & Tuoi <= 50)
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(18, 34, 50),
labels = c("18-34", "35-50"))
CustomerData <- CustomerData %>%
select(1:5, `Pham vi Tuoi`, 6:(ncol(CustomerData) - 1), `KH trung thanh`)
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx")
View(CustomerData)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
CustomerData <- CustomerData %>%
filter(Tuoi >= 18 & Tuoi <= 50)
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(18, 34, 50),
labels = c("18-34", "35-50"))
library(readxl)
CustomerData <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/File đã thực hiện tiền xử lý/CustomerData.xlsx")
View(CustomerData)
#Thuật toán phân lớp
#Tiền xử lý
#xóa các dòng có giá trị rỗng (NA)
CustomerData <- na.omit(CustomerData)
CustomerData <- CustomerData %>%
filter(Tuoi >= 18 & Tuoi <= 50)
CustomerData$`Pham vi Tuoi` <- cut(CustomerData$Tuoi,
breaks = c(17, 34, 50),
labels = c("18-34", "35-50"))
CustomerData <- CustomerData %>%
select(1:5, `Pham vi Tuoi`, 6:(ncol(CustomerData) - 1), `KH trung thanh`)
write.xlsx(CustomerData,"CustomerDatatienxulytrenR.xlsx")
tree <- rpart(`KH trung thanh` ~ `Gioi tinh` + `Pham vi Tuoi` + `Tong chi` +
`So lan mua hang` + `Phuong thuc thanh toan` +
`Danh gia don hang`,
data = CustomerData)
# In cây ra quyết định
plot(tree)
text(tree)
prp(tree)
prp(tree, extra = 1, box.col = "lightgreen", branch.lty = 1)
remove(Book2)
remove(association.rules)
remove(characterKH)
remove(clussters_df)
remove(clusters_df)
remove(clusters_table)
remove(combo1)
remove(combo2)
remove(combo3)
remove(CustomerDataERG)
remove(CustomerDataExcel)
remove(CustomerDataRG)
remove(Data)
View(data)
remove(data)
remove(data1)
remove(Data2TT_final)
remove(dataf)
remove(dataGomcum)
View(dataKH)
View(DataKH)
remove(dataKH)
remove(DataKH)
remove(DataKH_Xoatrung)
remove(df)
remove(df_new)
remove(df1)
remove(df2)
remove(dff)
remove(different_rows)
remove(Groceries_df)
remove(Invoice_Data)
remove(InvoiceData1)
remove(output)
remove(Online_Retail)
remove(output1227)
remove(output800)
remove(output835)
remove(outputo)
remove(rules1)
remove(retail)
remove(selected_combos)
remove(tr)
remove(trans_data)
remove(trans_matrix)
remove(trans_df)
remove(transaction)
remove(transactionData)
remove(transactions)
remove(ules)
remove(USArrests)
remove(all_items)
remove(combo)
remove(customer_id)
remove(i)
remove(invoid_id)
remove(InvoiceNo)
remove(invoid_id)
remove(j)
remove(invoice_id)
remove(item)
remove(num_combos)
remove(num_transactions)
remove(product_list)
remove(num_products)
remove(product)
remove(selected_products)
remove(TransTime)
View(convert_to_dataframe)
View(convert_to_dataframe)
View(convert_to_transactions)
remove(add_data)
remove(convert_to_dataframe)
remove(convert_to_transactions)
View(create_dataset)
remove(create_dataset)
View(dataset)
library(readxl)
dataset <- read_excel("D:/UFM 1/Nam3/HK2/Data/CK/Nop/2024_HK1_DM_Nhom2/File đã thực hiện tiền xử lý/CustomerDatatienxulyGomcumtrenR.xlsx")
View(dataset)
View(dataset)
View(clusters)
clusters$centers
prp(tree, extra = 1, box.col = "lightgreen", branch.lty = 1)
View(df_final)
View(grouped_data)
